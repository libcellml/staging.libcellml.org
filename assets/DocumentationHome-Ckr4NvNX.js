import{t as T,r as C,c as b,a as l,o,b as y,d as k,e as t,f as w,F as i,g as B,u as I,h as a,w as p,V as P,i as s,_ as L,j as h,k as M,l as V,m as j,n as F}from"./index-DHeQaB2E.js";const K={key:0},O=["href"],R=["href"],S={key:1},A={key:2},x={__name:"ValidationProvenance",props:{version:String},setup(D){const $=D,{version:d}=T($),r=C(n()),_=b(()=>`https://github.com/${r.value.testing_framework.project}/tree/${r.value.testing_framework.reference}`),m=b(()=>`https://github.com/${r.value.testing_database.project}/tree/${r.value.testing_database.reference}`),v=b(()=>r.value.testing_framework.reference),g=b(()=>r.value.testing_database.reference),e=b(()=>{const f=`/generated/${d.value}/validation_provenance.json`;return fetch(f).then(u=>{u.json().then(N=>{r.value=N},()=>{r.value=n()})}),!1}),c=b(()=>r.value.testing_framework.reference!=="unknown"&&r.value.testing_database.reference!=="unknown");function n(){return{testing_framework:{reference:"unknown",project:"unknown"},testing_database:{reference:"unknown",project:"unknown"}}}return(f,u)=>(o(),l(i,null,[c.value?(o(),l("span",K,[u[0]||(u[0]=k(" This documentation was validated with ",-1)),t("a",{href:_.value,target:"_blank"},w(v.value),9,O),u[1]||(u[1]=k(" of the end-2-end testing framework and ",-1)),t("a",{href:m.value,target:"_blank"},w(g.value),9,R),u[2]||(u[2]=k(" of the end-2-end test database. ",-1))])):(o(),l("span",S," There is no known validation of this documentation with the libCellML library. ")),e.value?(o(),l("span",A)):y("",!0)],64))}},E={style:{"padding-left":"2.5rem"}},G={key:0},q={__name:"DocumentationHome",setup(D){const{checkDocumentationAvailability:$,documentationInfoMap:d}=I(),r=B(),_=r[0],m=C([]),v=Object.keys(d);for(const g of r){let e={};for(const n of v)e[n]=C(!1);const c={version:g,...e};for(const n of v)$(c[n],g,n);m.value.push(c)}return(g,e)=>{const c=M("router-link");return o(),l(i,null,[e[3]||(e[3]=t("h1",null,"Documentation",-1)),e[4]||(e[4]=t("p",null,"General documentation for all versions.",-1)),e[5]||(e[5]=t("br",null,null,-1)),a(P,null,{default:p(()=>[a(V,null,{default:p(()=>[a(j,{label:"Installation","icon-name":"mdi-download",target:"/documentation/installation"})]),_:1}),a(V,null,{default:p(()=>[a(j,{label:"Theory","icon-name":"mdi-lightbulb-outline",target:"/documentation/theory"})]),_:1})]),_:1}),e[6]||(e[6]=t("br",null,null,-1)),e[7]||(e[7]=t("h2",null,"Version specific documentation",-1)),t("p",null,[e[0]||(e[0]=k(" Documentation for ",-1)),t("strong",null,w(s(_)),1),e[1]||(e[1]=k(" of libCellML. ",-1)),a(x,{version:s(_)},null,8,["version"])]),e[8]||(e[8]=t("br",null,null,-1)),a(L),e[9]||(e[9]=t("br",null,null,-1)),a(P,null,{default:p(()=>[(o(!0),l(i,null,h(s(v),n=>(o(),l(i,{key:"secondary_button_"+n},[s(d)[n].level===2&&m.value[0][n]?(o(),F(V,{key:0},{default:p(()=>[a(j,{id:n,label:s(d)[n].label,"icon-name":s(d)[n].iconName,target:`/documentation/${m.value[0].version}/${n}`},null,8,["id","label","icon-name","target"])]),_:2},1024)):y("",!0)],64))),128))]),_:1}),e[10]||(e[10]=t("h3",null,"Previous versions of the documentation",-1)),e[11]||(e[11]=t("p",null," Previous versions listed in reverse semantic versioning order. Only the most recent patch release for each version is available. ",-1)),(o(!0),l(i,null,h(m.value,n=>(o(),l("div",{key:"older_"+n.version},[n.version!==s(_)?(o(),l(i,{key:0},[t("h4",null,w(n.version),1),t("ul",E,[(o(!0),l(i,null,h(s(v),f=>(o(),l(i,{key:"list_item_"+f},[n[f]?(o(),l("li",G,[a(c,{to:`/documentation/${n.version}/${f}`},{default:p(()=>[k(w(s(d)[f].label),1)]),_:2},1032,["to"])])):y("",!0)],64))),128))]),t("p",null,[a(x,{version:n.version},null,8,["version"])])],64)):y("",!0),e[2]||(e[2]=t("br",null,null,-1))]))),128))],64)}}};export{q as default};
